{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","Key","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,IAAM,SAACC,GACL,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,OAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,OAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,mCACsBA,EADtB,KAEN,kCA3Bf,GAAyBU,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.7d9f2826.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyPressed: string;\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    keyPressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.Key);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.Key);\n  }\n\n  Key = (event: KeyboardEvent) => {\n    this.setState({\n      keyPressed: event.key,\n    });\n  };\n\n  render() {\n    const { keyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {keyPressed\n            ? (`The last pressed key is [${keyPressed}]`)\n            : ('Nothing was pressed yet')}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}